# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-09-19 19:23
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cname', models.CharField(max_length=128)),
                ('picture_1', models.CharField(max_length=256)),
                ('picture_2', models.CharField(max_length=256)),
                ('picture_3', models.CharField(max_length=256)),
                ('tag', models.CharField(max_length=16)),
                ('sku', models.CharField(max_length=32)),
                ('description', models.CharField(max_length=128)),
                ('plate', models.CharField(max_length=128)),
                ('case', models.CharField(max_length=128)),
                ('gem', models.CharField(max_length=128)),
                ('strap', models.CharField(max_length=128)),
                ('price', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'b2c_commodity',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=32)),
                ('money', models.IntegerField()),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('pay_time', models.DateTimeField(blank=True, null=True)),
                ('send_time', models.DateTimeField(blank=True, null=True)),
                ('cid', models.ForeignKey(blank=True, db_column='cid', null=True, on_delete=django.db.models.deletion.CASCADE, to='App.Commodity')),
            ],
            options={
                'db_table': 'b2c_order',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('s_name', models.CharField(max_length=60)),
                ('parent_id', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('order_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'b2c_style',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=128, unique=True)),
                ('mobile', models.CharField(max_length=16, null=True)),
                ('gender', models.IntegerField(blank=True, default=1, null=True)),
                ('password_hash', models.CharField(db_column='password', max_length=128, null=True)),
                ('type', models.IntegerField(blank=True, default=0, null=True)),
                ('score', models.IntegerField(blank=True, default=0, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('last_login', models.DateTimeField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'b2c_user',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='uid',
            field=models.ForeignKey(blank=True, db_column='uid', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commodity',
            name='sid',
            field=models.ForeignKey(blank=True, db_column='sid', null=True, on_delete=django.db.models.deletion.CASCADE, to='App.Style'),
        ),
        migrations.AddField(
            model_name='cart',
            name='cid',
            field=models.ForeignKey(db_column='cid', on_delete=django.db.models.deletion.CASCADE, to='App.Commodity'),
        ),
        migrations.AddField(
            model_name='cart',
            name='uid',
            field=models.ForeignKey(db_column='uid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
